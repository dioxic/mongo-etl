  static class CliOptions {

        private final Options opt = new Options();

        {
            opt.addOption(Option.builder("t")
                    .longOpt("template")
                    .hasArg()
                    .desc("template file")
                    .required()
                    .build()
            );

            opt.addOption(Option.builder("d")
                    .longOpt("database")
                    .hasArg()
                    .desc("mongo database")
                    .required()
                    .build()
            );

            opt.addOption(Option.builder("c")
                    .longOpt("collection")
                    .hasArg()
                    .desc("mongo collection")
                    .required()
                    .build()
            );

            opt.addOption(Option.builder("n")
                    .longOpt("number")
                    .hasArg()
                    .desc("number of documents to generate (default: 5)")
                    .type(Integer.class)
                    .build()
            );

            opt.addOption(Option.builder("u")
                    .longOpt("uri")
                    .hasArg()
                    .desc("mongo uri")
                    .required()
                    .build()
            );
        }

        private String database;
        private String collection;
        private String mongoUri;
        private Integer number;
        private Template template;

        CliOptions(String[] args) {
            CommandLineParser parser = new DefaultParser();
            CommandLine cmd;
            String templateOptValue;

            try {
                cmd = parser.parse(opt, args);
                mongoUri = cmd.getOptionValue('u');
                database = cmd.getOptionValue('d');
                collection = cmd.getOptionValue('c');
                number = Integer.parseInt(cmd.getOptionValue('n'));
                templateOptValue = cmd.getOptionValue("t");
            }
            catch (ParseException | NumberFormatException e) {
                printUsage();
                throw new RuntimeException(e);
            }

            template = Template.from(Paths.get(templateOptValue));
        }

        public String getDatabase() {
            return database;
        }

        public String getCollection() {
            return collection;
        }

        public String getMongoUri() {
            return mongoUri;
        }

        public Integer getNumber() {
            return number;
        }

        public Template getTemplate() {
            return template;
        }

        void printUsage() {
            HelpFormatter formatter = new HelpFormatter();
            formatter.printHelp("mgenerate", opt, true);
        }

    }